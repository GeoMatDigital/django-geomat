# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-11-12 18:31
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import geomat.stein.fields


def transfer_cleavage(apps, schema_editor):
    """
    With this Datamigration we want to transfer existing cleavage Data to
    the newly created Cleavage models. Afterwards we will delete the old
    cleavage field.
    """
    MineralType = apps.get_model("stein", "MineralType")
    Cleavage = apps.get_model("stein", "Cleavage")
    for m in MineralType.objects.all():
        cleavages = []
        for cleav in m.cleavage:
            cl = Cleavage.objects.create(cleavage=cleav)
            cleavages.append(cl)
        m.cleavage_two.set(cleavages)


def revert(apps, schema_editor):
    """
    We also want to have the option to revert the above migration.
    """

    MineralType = apps.get_model("stein", "MineralType")
    Cleavage = apps.get_model("stein", "Cleavage")
    for m in MineralType.objects.all():
        cleavages = []
        for cleav in m.cleavge_two.all():
            cleavages.append(cleav.cleavage)

        m.cleavage = cleavages
        m.save()


class Migration(migrations.Migration):

    dependencies = [
        ('stein', '0043_auto_20171109_1519'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cleavage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cleavage', models.CharField(choices=[(b'PE', 'perfect'), (b'LP', 'less perfect'), (b'GO', 'good'), (b'DI', 'distinct'), (b'ID', 'indistinct'), (b'NO', 'none')], max_length=2, verbose_name='cleavage')),
                ('coordinates', models.CharField(blank=True, default=b'', max_length=100, verbose_name='coordinates')),
            ],
        ),
        migrations.AlterField(
            model_name='mineraltype',
            name='fracture',
            field=geomat.stein.fields.ChoiceArrayField(base_field=models.CharField(choices=[(b'CF', 'conchoidal'), (b'EF', 'earthy'), (b'HF', 'hackly'), (b'SF', 'splintery'), (b'UF', 'uneven')], max_length=2), null=True, size=None, verbose_name='fracture'),
        ),
        migrations.AddField(
            model_name='cleavage',
            name='mineral_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cleavage_two', to='stein.MineralType', verbose_name='mineral type'),
        ),
        migrations.RunPython(transfer_cleavage, revert)
    ]
