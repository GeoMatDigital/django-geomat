# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-12-30 10:45
from __future__ import unicode_literals

import django.contrib.postgres.fields
from django.db import migrations, models
import geomat.stein.fields
import stdimage.models


class Migration(migrations.Migration):

    dependencies = [
        ('stein', '0047_delete_examples_glossaryentry'),
    ]

    operations = [
        migrations.AlterField(
            model_name='cleavage',
            name='cleavage',
            field=models.CharField(choices=[('PE', 'perfect'), ('LP', 'less perfect'), ('GO', 'good'), ('DI', 'distinct'), ('ID', 'indistinct'), ('NO', 'none')], max_length=2, verbose_name='cleavage'),
        ),
        migrations.AlterField(
            model_name='cleavage',
            name='coordinates',
            field=models.CharField(blank=True, default='', max_length=100, verbose_name='coordinates'),
        ),
        migrations.AlterField(
            model_name='crystalsystem',
            name='crystal_system',
            field=models.CharField(blank=True, choices=[('TC', 'Triclinic'), ('MC', 'Monoclinic'), ('OR', 'Orthorhombic'), ('TT', 'Tetragonal'), ('TR', 'Trigonal'), ('HG', 'Hexagonal'), ('CB', 'Cubic'), ('AM', 'Amorph')], max_length=2, verbose_name='crystal system'),
        ),
        migrations.AlterField(
            model_name='mineraltype',
            name='fracture',
            field=geomat.stein.fields.ChoiceArrayField(base_field=models.CharField(choices=[('CF', 'conchoidal'), ('EF', 'earthy'), ('HF', 'hackly'), ('SF', 'splintery'), ('UF', 'uneven')], max_length=2), null=True, size=None, verbose_name='fracture'),
        ),
        migrations.AlterField(
            model_name='mineraltype',
            name='lustre',
            field=geomat.stein.fields.ChoiceArrayField(base_field=models.CharField(choices=[('AM', 'adamantine lustre'), ('DL', 'dull lustre'), ('GR', 'greasy lustre'), ('MT', 'metallic lustre'), ('PY', 'pearly lustre'), ('SL', 'silky lustre'), ('SM', 'submetallic lustre'), ('VT', 'vitreous lustre'), ('WY', 'waxy lustre')], max_length=2), null=True, size=None, verbose_name='lustre'),
        ),
        migrations.AlterField(
            model_name='mineraltype',
            name='systematics',
            field=models.CharField(choices=[('EL', 'Elements'), ('SF', 'Sulfides & Sulfosalts'), ('HG', 'Halogenides'), ('OH', 'Oxides and Hydroxides'), ('CN', 'Carbonates and Nitrates'), ('BR', 'Borates'), ('SL', 'Sulfates'), ('PV', 'Phosphates, Arsenates & Vanadates'), ('SG', 'Silicates & Germanates'), ('OC', 'Organic Compounds')], default='EL', max_length=2, verbose_name='systematics'),
        ),
        migrations.AlterField(
            model_name='photograph',
            name='image_file',
            field=stdimage.models.StdImageField(db_index=True, upload_to=''),
        ),
        migrations.AlterField(
            model_name='photograph',
            name='orientation',
            field=models.CharField(choices=[('T', 'Top'), ('B', 'Bottom'), ('S', 'Side')], max_length=1, verbose_name='orientation'),
        ),
        migrations.AlterField(
            model_name='photograph',
            name='shot_type',
            field=models.CharField(choices=[('MI', 'Micro'), ('MA', 'Macro'), ('FE', 'Fisheye'), ('TL', 'Tele')], max_length=2, verbose_name='shot type'),
        ),
        migrations.AlterField(
            model_name='quizanswer',
            name='correct',
            field=models.BooleanField(help_text='Nothing yet.', verbose_name='correct'),
        ),
        migrations.AlterField(
            model_name='quizanswer',
            name='feedback_correct',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='feedback if answered correctly'),
        ),
        migrations.AlterField(
            model_name='quizanswer',
            name='feedback_incorrect',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='feedback if answered incorrectly'),
        ),
        migrations.AlterField(
            model_name='quizquestion',
            name='qtype',
            field=models.CharField(choices=[('SC', 'Single Choice'), ('MC', 'Multiple Choice'), ('DD', 'Drag and Drop'), ('RG', 'Ranking'), ('HS', 'Hotspot')], max_length=2, null=True, verbose_name='question type'),
        ),
        migrations.AlterField(
            model_name='quizquestion',
            name='tags',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), help_text='If you want to add more than one tag, seperate them with commas.', null=True, size=None),
        ),
    ]
