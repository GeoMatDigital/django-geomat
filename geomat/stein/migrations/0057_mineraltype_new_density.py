# Generated by Django 2.0.2 on 2018-04-24 07:45


import django.contrib.postgres.fields.ranges
from django.db import migrations


def transform_to_new_density(apps, schema_editor):
    MineralType = apps.get_model("stein", "MineralType")

    for mineral in MineralType.objects.all():
        tpl = ()
        density = mineral.density

        if not("-"in density):
            dns = float(density.replace(",", "."))
            tpl = (dns, dns+0.001)
        else:
            tpl = tuple(float(x) for x in mineral.density.replace(",", ".").split("-"))

        mineral.new_density = tpl
        mineral.save()


def revert(apps, schema_editor):

    MineralType = apps.get_model("stein", "MineralType")

    for mineral in MineralType.objects.all():
        new_density = mineral.new_denisty

        if float(mineral.new_mohs_scale.upper) == float(mineral.new_mohs_scale.lower) + 0.001:
            mineral.density = "{}".format(mineral.new_density.lower).replace(".", ",")
        else:
            mineral.density = "{0}-{1}".format(mineral.new_density.lower,
                                               mineral.new_density.upper).replace(".", ",")

        mineral.save()


class Migration(migrations.Migration):

    dependencies = [
        ('stein', '0056_larger_comments_mintype'),
    ]

    operations = [
        migrations.AddField(
            model_name='mineraltype',
            name='new_density',
            field=django.contrib.postgres.fields.ranges.FloatRangeField(blank=True, null=True),
        ),
        migrations.RunPython(transform_to_new_density, revert),
    ]
